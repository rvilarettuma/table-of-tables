{"version":3,"sources":["Application/About/Images/rvt.gif","Margins/Navigator.js","Application/About/About.js","Application/Home/Home.js","Application/Generator/MainList.js","Application/Generator/Generator.js","Application/Application.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigator","props","state","collapsed","toggleNavbar","bind","className","Navbar","light","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","isOpen","navbar","Nav","NavItem","NavLink","setAppPage","setState","Component","About","renderContainer","Media","object","src","rvtImage","alt","body","bottom","heading","Home","renderJumbotron","renderGetStarted","Jumbotron","fluid","Container","Button","outline","MainList","cat_btn_open","renderList","setCategories","nextProps","nextState","nextContext","category","ListGroup","flush","mlist","JSON","parse","stringify","master_list","items","i","Object","keys","forEach","j","k","undefined","header","push","ListGroupItem","disabled","key","name","file","description","tag","action","e","length","c","currentTarget","getAttribute","s","innerText","f","d","setName","Generator","currentCategory","currentSubCategory","currentDescription","file_data","renderMain","fetchData","roll","sentence","rand","Math","floor","random","secondary","Row","Col","xs","sm","md","lg","xl","block","fetch","then","res","json","data","catch","err","console","error","Application","pageToRender","page","createApplicationPage","App","pages","title","current_page","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f2c1bbf3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rvt.66d61ac3.gif\";","import React, {Component} from 'react';\nimport {Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink} from 'reactstrap';\n\nexport default class Navigator extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: true\n    };\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n  }\n\n  render() {\n    return (\n      <div className=\"navbar\">\n        <Navbar light>\n          <NavbarBrand href=\"/\" className=\"mr-auto\">home</NavbarBrand>\n          <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\"/>\n          <Collapse isOpen={!this.state.collapsed} navbar>\n            <Nav navbar>\n              <NavItem>\n                <NavLink href=\"#\" onClick={() => this.props.setAppPage('generate')}>Generator</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#\" onClick={() => this.props.setAppPage('about')}>About</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://github.com/rvilarettuma/table-of-tables\">GitHub</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    })\n  }\n}","import React, { Component } from 'react';\nimport {Media } from 'reactstrap';\nimport rvtImage from \"./Images/rvt.gif\";\n\nexport default class About extends Component {\n\n  render() {\n    return (\n      <div className=\"container-md\">\n        {this.renderContainer()}\n      </div>\n    );\n  }\n\n  renderContainer() {\n    return (\n        <Media className=\"mt-lg-auto\">\n          <Media>\n            <Media object src={rvtImage} alt=\"Richard Vilaret-Tuma Bitmoji Portrait\"/>\n          </Media>\n          <Media body bottom>\n            <Media heading>\n              Richard Vilaret-Tuma\n            </Media>\n            <h5 className=\"medium\"> Primary Developer</h5>\n            <p>A senior at Colorado State University, majoring in Applied Computing Technology. This project is being developed for credit for CS495 - Independent Study.</p>\n            <p>All tables sourced with permission from user OrkishBlade on <a href=\"https://www.reddit.com/r/BehindTheTables/\">/r/BehindTheTables</a></p>\n          </Media>\n        </Media>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Container, Jumbotron, Button } from 'reactstrap';\n\nexport default class Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.renderJumbotron = this.renderJumbotron.bind(this);\n    this.renderGetStarted = this.renderGetStarted.bind(this);\n  }\n\n  render() {\n    return (\n      <div className={\"main-page\"}>\n        {this.renderJumbotron()}\n      </div>\n    );\n  }\n\n  renderJumbotron() {\n    return (\n      <Jumbotron fluid className={\"jumbo\"} >\n        <Container>\n          <h1 className=\"display-3\">Tabularium</h1>\n          <p className=\"lead\">random generation for the aspiring artist, creative, or tabletop gamer </p>\n          {this.renderGetStarted()}\n        </Container>\n      </Jumbotron>\n    );\n  }\n\n  renderGetStarted() {\n    return (\n      <Container>\n        <Button className=\"pill-button text-center\" outline onClick={() => {this.props.setAppPage('generate')}}>get started</Button>\n      </Container>\n    );\n  }\n\n\n}","import React, {Component} from 'react';\nimport {ListGroup, ListGroupItem} from 'reactstrap';\nimport master_list from './Lists/master_list.json';\n\nexport default class MainList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cat_btn_open: false\n    };\n    this.renderList = this.renderList.bind(this);\n    this.setCategories = this.setCategories.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return this.state.category !== nextState.category;\n  }\n\n  render() {\n    return (\n      <div className=\"sidebar\">\n        <ListGroup flush>\n          {this.renderList()}\n        </ListGroup>\n      </div>\n    );\n  }\n\n  renderList() {\n    const mlist = JSON.parse(JSON.stringify({master_list}));\n    let items = [];\n    for (let i = 0; i < mlist.master_list.length; i++) {\n      Object.keys(mlist.master_list[i]).forEach((j) => {\n        Object.keys(mlist.master_list[i][j]).forEach((k) => {\n          if (mlist.master_list[i][j][k].header !== undefined) {\n            items.push(\n              <ListGroupItem disabled className=\"text-uppercase generatorTitle\"\n                             key={'lg_' + k + mlist.master_list[i][j][k].header}>{mlist.master_list[i][j][k].header}</ListGroupItem>)\n          }\n          if (mlist.master_list[i][j][k].name !== undefined) {\n            items.push(\n              <ListGroupItem category={mlist.master_list[i][j][k].category} file={mlist.master_list[i][j][k].file} description={mlist.master_list[i][j][k].description} tag={\"button\"} action onClick={(e) => {\n                this.setCategories(e)\n              }}\n                             key={'lg0_' + k + mlist.master_list[i][j][k].name}>{mlist.master_list[i][j][k].name}</ListGroupItem>\n            )\n          }\n        });\n      });\n    }\n    return (items);\n  }\n\n  setCategories(e) {\n    let c = e.currentTarget.getAttribute(\"category\");\n    let s = e.currentTarget.innerText;\n    let f = e.currentTarget.getAttribute(\"file\");\n    let d = e.currentTarget.getAttribute(\"description\");\n    this.props.setName(c,s,d,f);\n  }\n\n}","import React, {Component} from 'react';\nimport {Button, Col, Row} from 'reactstrap';\nimport MainList from \"./MainList\";\n\nexport default class Generator extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentCategory: \"Dungeons and Locations\",\n      currentSubCategory: \"Basic Dungeon\",\n      currentDescription: \"A basic, bare bones dungeon.\",\n      file: \"dl_basic_dungeon\",\n      file_data: []\n    };\n    this.renderMain = this.renderMain.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.setName = this.setName.bind(this);\n    this.roll = this.roll.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return this.state.file_data !== nextState.file_data;\n  }\n\n  render() {\n    return (\n      <div className={\"generator\"}>\n        {this.renderMain()}\n      </div>\n    );\n  }\n\n  renderMain() {\n    let items = [];\n    let d = this.state.file_data;\n    Object.keys(d).forEach((i) => {\n      items.push(<p key={'p_' + i}>{d[i].sentence}</p>);\n      const rand = Math.floor((Math.random() * d[i].secondary.length));\n      items.push(<p className=\"font-weight-bolder\" key={'p1_' + i }>{d[i].secondary[rand]}</p>)\n    });\n    return (\n      <div>\n          <Row>\n            <Col xs={2} sm={2} md={2} lg={2} xl={2}>\n              <MainList setName={this.setName}/>\n            </Col>\n              <Col xs={10} sm={10} md={10} lg={10} xl={10}>\n                <h1 className=\"display-4 text-md-center generatorTitle\">{this.state.currentSubCategory}</h1>\n                <h5 className=\"text-md-center generatorSubTitle\">{this.state.currentCategory}</h5>\n                <hr className=\"my-2 generatorDesc\"/>\n                <p className=\"font-italic text-sm-center\">{this.state.currentDescription}</p>\n                <Button block outline onClick={this.roll}>Roll</Button>\n                <br/>\n                {items}\n              </Col>\n          </Row>\n      </div>\n    );\n  }\n\n  fetchData() {\n    fetch(`dl_tables/${this.state.file}.json`)\n      .then((res) => res.json())\n      .then(data => this.setState({file_data: data}))\n      .catch(err => console.error(err));\n  }\n\n  roll() {\n    this.setName(this.state.currentCategory, this.state.currentSubCategory, this.state.currentDescription, this.state.file)\n  }\n\n  setName(c,s,d,f) {\n    this.setState({\n      currentCategory: c,\n      currentSubCategory: s,\n      currentDescription: d,\n      file: f\n    }, () => { this.fetchData() });\n  }\n\n}","import React, { Component } from 'react';\nimport About from './About/About';\nimport Home from './Home/Home';\nimport Generator from './Generator/Generator';\n\nexport default class Application extends Component {\n\n  render() {\n    let pageToRender = this.props.page;\n    return (\n      <div>\n        {this.createApplicationPage(pageToRender)}\n      </div>\n    );\n  }\n\n  createApplicationPage(pageToRender) {\n    switch (pageToRender) {\n      case 'about':\n        return <About/>;\n      case 'generate':\n        return <Generator/>;\n      default:\n        return <Home setAppPage={this.props.setAppPage}/>;\n    }\n  }\n}","import React, { Component } from 'react';\nimport Navigator from './Margins/Navigator';\nimport Application from './Application/Application';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.pages = [\n      { title: 'Table of Tables', page: ''},\n      { title: 'About', page: 'about'},\n      { title: 'Home', page: 'home'},\n      { title: 'Generator', page: 'generate'}\n    ];\n    this.state = {\n      current_page: this.pages[0].page\n    };\n    this.setAppPage = this.setAppPage.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        <Navigator pages={this.pages} setAppPage={this.setAppPage}/>\n        <Application page={this.state.current_page} setAppPage={this.setAppPage}/>\n      </div>\n    );\n  }\n\n  setAppPage(page) {\n    this.setState({current_page: page});\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}